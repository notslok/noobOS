# Custom build script for the project

# 1) Generating object file of the boot asm and main.c
aarch64-linux-gnu-gcc -c boot.s -o boot.o
aarch64-linux-gnu-gcc -c lib.s -o liba.o
aarch64-linux-gnu-gcc -std=c99 -ffreestanding -mgeneral-regs-only -c main.c
aarch64-linux-gnu-gcc -std=c99 -ffreestanding -mgeneral-regs-only -c uart.c

# 2) linking the main.o and boot.o object file using a custom linker-script link.lds
aarch64-linux-gnu-ld -sostdlib -T link.lds -o kernel boot.o main.o liba.o uart.o

# 3) Converting the ELF file generated by linking main.o and boot.o to binary format as this image has to be loaded at x80000 address of the Rpi's main memory
aarch64-linux-gnu-objcopy -O binary kernel kernel8.img
